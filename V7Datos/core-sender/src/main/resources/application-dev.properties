
## MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/rezoom
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hbs.security.resource.RealNamingStrategyImpl

spring.application.name=core-sender
server.address=localhost
server.port=8200
server.servlet.context-path=/core-sender
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka/
eureka.client.healthcheck.enabled = true
eureka.client.registerWithEureka=false
eureka.client.fetchRegistry=true


zuul.routes.core-sender.path=/core-sender/**
zuul.routes.core-sender.serviceId=core-sender

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=userId
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.listener.concurrency=3
spring.kafka.listener.poll-timeout=1

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer


##Key-Value pair seperated by comma
##
## profile#c:/som/users
##
application.physical.paths=profile#c:/som/users,attachment#c:/som/emails
attachement.folder = /uploads
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=10MB

# output to a file
#logging.file=core-admin.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log

#logging.pattern.file=%d %p %c{1.} [%t] %m%n

#logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

## if no active profile, default is 'default'
##spring.profiles.active=dev

# root level
#logging.level.=INFO
